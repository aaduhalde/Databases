--create entity
--create setdata, csv.
--create stored
--connect to pipe_python

mkdir -p /opt/oracle
chown alex:alex /opt/oracle

# aptitude install libaio1

SQLPLUS*
./sqlplus sys/password@//0.0.0.0:51521/XE as sysdba 
./sqlplus sys/password@//0.0.0.0:1521/XEPDB1 as sysdba

$ export LD_LIBRARY_PATH=/opt/oracle/instantclient_11_2/
    sudo cat /home/alex/Docker/myxedb/oradata/dbconfig/XE/tnsnames.ora 
    sudo cat /home/alex/Docker/myxedb/oradata/dbconfig/XE/listener.ora 

sudo docker images
sudo docker ps 
docker network ls
    $ docker network create myoracle_network

ps -a 
ps -l 

When Docker creates and runs containers, it generates random container names. The example Docker run commands shown earlier used the --name option to name the container myxedb. Note that the container name is a resolvable hostname within a Docker network.
To list the available Docker networks, execute the following command:

To create a Docker network, use the create command and specify a name for the network:
To attach your Docker container to a specific network when you execute the run command, use the --network option:

$ docker run --name myxedb \
    ...
    --network myoracle_network \
    oracle/database:18.4.0-xe

sudo docker exec -it --user=oracle myxedb bash
sqlplus sys/password@XEPDB1 as sysdba

$sudo docker run --name myxedb \
    -d \
    -p 51521:1521 \
    -p 55500:5500 \
    -e ORACLE_PWD=password \
    -e ORACLE_CHARACTERSET=AL32UTF8 \
    oracle/database:18.4.0-xe
$ . oraenv
ORACLE_SID = [XE] ? XE
The Oracle base remains unchanged with value /opt/oracle

https://blogs.oracle.com/connect/post/deliver-oracle-database-18c-express-edition-in-containers
https://docs.docker.com/engine/reference/run/

///////////////
chown 54321:54321 /home/myuser/Docker/myxedb/oradata;
////////////////

$ mkdir -p /home/myuser/Docker/myxedb/oradata
$ chmod 777 /home/myuser/Docker/myxedb/oradata
$ docker run --name myxedb \
    ...
    -v /home/myuser/Docker/myxedb/oradata:/opt/oracle/oradata \
    -v /home/myuser/Docker/myxedb/scripts/setup:/opt/oracle/scripts/setup \
    -v /home/myuser/Docker/myxedb/scripts/startup:/opt/oracle/scripts/startup \
    oracle/database:18.4.0-xe
